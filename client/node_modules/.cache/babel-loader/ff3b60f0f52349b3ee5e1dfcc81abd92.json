{"ast":null,"code":"var _jsxFileName = \"/Users/rayandiouf/Desktop/movie-suggester/client/src/components/searchBarAndInfo/SearchBarInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchInfo() {\n  _s();\n\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchMoviee, setSearchMovie] = useState(\"\"); //   const fetchdata = async (yourmovie) => {\n  //     const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${yourmovie}`;\n  //     const response = await fetch(url);\n  //     console.log(response);\n  //     const responseParsed = await response.json();\n  //     console.log(responseParsed);\n  //   };\n\n  useEffect(() => {\n    const handleSubmit = async event => {\n      event.preventDefault();\n\n      if (!searchMoviee) {\n        return false;\n      }\n\n      try {\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${searchMoviee}`;\n        const response = await fetch(url);\n        console.log(response);\n\n        if (!resJSON.ok) {\n          throw new Error(\"something went wrong!\");\n        }\n\n        const resJSON = await response.json();\n        const MovieData = resJSON.map(movie => ({\n          movieName: movie.title,\n          movieOverview: movie.overview,\n          moviePoster: movie.poster_path\n        }));\n        setSearchedMovies(MovieData);\n        setSearchMovie(\"\");\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            value: searchMoviee,\n            onChange: e => setSearchMovie(e.target.value),\n            placeholder: \"Search for a Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            variant: \"success\",\n            onSubmit: setSearchMovie(searchMoviee),\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Movie streamz is a movie app blablablablablablaablabalbalbalablblablbalabblablalblablablablablablablalna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchMovieee\",\n        children: searchedMovies.map(movie => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://image.tmdb.org/t/p/w200\" + movie.poster_path\n            }, movie.poster_path, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: movie.original_title\n            }, movie.original_title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.overview\n            }, movie.overview, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }); //   const handleSubmit = async (event) => {\n  //     event.preventDefault();\n  //     if (!searchMoviee) {\n  //       return false;\n  //     }\n  //     try {\n  //       const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${searchMoviee}`;\n  //       const response = await fetch(url);\n  //       console.log(response);\n  //       if (!resJSON.ok) {\n  //         throw new Error(\"something went wrong!\");\n  //       }\n  //       const resJSON = await response.json();\n  //       const MovieData = resJSON.map((movie) => ({\n  //         movieName: movie.title,\n  //         movieOverview: movie.overview,\n  //         moviePoster: movie.poster_path,\n  //       }));\n  //       setSearchedMovies(MovieData);\n  //       setSearchMovie(\"\");\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //   fetchdata(\"Batman\");\n  //   return (\n  //     <div onSubmit={handleSubmit}>\n  //       <div className=\"searchInfo\">\n  //         <div className=\"searchBar\">\n  //           <input\n  //             type=\"search\"\n  //             value={searchMoviee}\n  //             onChange={(e) => setSearchMovie(e.target.value)}\n  //             placeholder=\"Search for a Movie\"\n  //           />\n  //           <button type=\"submit\" variant=\"success\" onSubmit={setSearchMovie(searchMoviee)}>\n  //             Search\n  //           </button>\n  //         </div>\n  //       </div>\n  //       <div className=\"info\">\n  //         <p>\n  //           Movie streamz is a movie app\n  //           blablablablablablaablabalbalbalablblablbalabblablalblablablablablablablalna\n  //         </p>\n  //       </div>\n  //       <div className=\"searchMovieee\">\n  //         {searchedMovies.map((movie) => {\n  //             return(\n  //                 <>\n  //                 <img key={movie.poster_path} src={\"https://image.tmdb.org/t/p/w200\" + movie.poster_path} />\n  //                 <h3 key={movie.original_title}>{movie.original_title}</h3>\n  //                 <p key={movie.overview}>{movie.overview}</p>\n  //                 </>\n  //             )\n  //         })}\n  //       </div>\n  //     </div>\n  //   );\n}\n\n_s(SearchInfo, \"w+jR3geGDZPeaeRnXc7HuNHXP5o=\");\n\n_c = SearchInfo;\nexport default SearchInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInfo\");","map":{"version":3,"sources":["/Users/rayandiouf/Desktop/movie-suggester/client/src/components/searchBarAndInfo/SearchBarInfo.js"],"names":["React","useEffect","useState","SearchInfo","searchedMovies","setSearchedMovies","searchMoviee","setSearchMovie","handleSubmit","event","preventDefault","url","response","fetch","console","log","resJSON","ok","Error","json","MovieData","map","movie","movieName","title","movieOverview","overview","moviePoster","poster_path","err","e","target","value","original_title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction SearchInfo() {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchMoviee, setSearchMovie] = useState(\"\");\n//   const fetchdata = async (yourmovie) => {\n//     const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${yourmovie}`;\n//     const response = await fetch(url);\n//     console.log(response);\n//     const responseParsed = await response.json();\n//     console.log(responseParsed);\n//   };\nuseEffect(()=> {\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!searchMoviee) {\n          return false;\n        }\n        try {\n          const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${searchMoviee}`;\n          const response = await fetch(url);\n          console.log(response);\n          if (!resJSON.ok) {\n            throw new Error(\"something went wrong!\");\n          }\n          const resJSON = await response.json();\n          const MovieData = resJSON.map((movie) => ({\n            movieName: movie.title,\n            movieOverview: movie.overview,\n            moviePoster: movie.poster_path,\n          }));\n          setSearchedMovies(MovieData);\n          setSearchMovie(\"\");\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      return (\n        <div onSubmit={handleSubmit}>\n          <div className=\"searchInfo\">\n            <div className=\"searchBar\">\n              <input\n                type=\"search\"\n                value={searchMoviee}\n                onChange={(e) => setSearchMovie(e.target.value)}\n                placeholder=\"Search for a Movie\"\n              />\n              <button type=\"submit\" variant=\"success\" onSubmit={setSearchMovie(searchMoviee)}>\n                Search\n              </button>\n            </div>\n          </div>\n          <div className=\"info\">\n            <p>\n              Movie streamz is a movie app\n              blablablablablablaablabalbalbalablblablbalabblablalblablablablablablablalna\n            </p>\n          </div>\n          <div className=\"searchMovieee\">\n            {searchedMovies.map((movie) => {\n                return(\n                    <>\n                    <img key={movie.poster_path} src={\"https://image.tmdb.org/t/p/w200\" + movie.poster_path} />\n                    <h3 key={movie.original_title}>{movie.original_title}</h3>\n                    <p key={movie.overview}>{movie.overview}</p>\n                    </>\n                )\n            })}\n          </div>\n        </div>\n      );\n})\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!searchMoviee) {\n//       return false;\n//     }\n//     try {\n//       const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${searchMoviee}`;\n//       const response = await fetch(url);\n//       console.log(response);\n//       if (!resJSON.ok) {\n//         throw new Error(\"something went wrong!\");\n//       }\n//       const resJSON = await response.json();\n//       const MovieData = resJSON.map((movie) => ({\n//         movieName: movie.title,\n//         movieOverview: movie.overview,\n//         moviePoster: movie.poster_path,\n//       }));\n//       setSearchedMovies(MovieData);\n//       setSearchMovie(\"\");\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   fetchdata(\"Batman\");\n//   return (\n//     <div onSubmit={handleSubmit}>\n//       <div className=\"searchInfo\">\n//         <div className=\"searchBar\">\n//           <input\n//             type=\"search\"\n//             value={searchMoviee}\n//             onChange={(e) => setSearchMovie(e.target.value)}\n//             placeholder=\"Search for a Movie\"\n//           />\n//           <button type=\"submit\" variant=\"success\" onSubmit={setSearchMovie(searchMoviee)}>\n//             Search\n//           </button>\n//         </div>\n//       </div>\n//       <div className=\"info\">\n//         <p>\n//           Movie streamz is a movie app\n//           blablablablablablaablabalbalbalablblablbalabblablalblablablablablablablalna\n//         </p>\n//       </div>\n//       <div className=\"searchMovieee\">\n//         {searchedMovies.map((movie) => {\n//             return(\n//                 <>\n//                 <img key={movie.poster_path} src={\"https://image.tmdb.org/t/p/w200\" + movie.poster_path} />\n//                 <h3 key={movie.original_title}>{movie.original_title}</h3>\n//                 <p key={movie.overview}>{movie.overview}</p>\n//                 </>\n//             )\n//         })}\n//       </div>\n//     </div>\n//   );\n}\nexport default SearchInfo;\n"]},"metadata":{},"sourceType":"module"}