{"ast":null,"code":"var _jsxFileName = \"/Users/rayandiouf/Desktop/movie-suggester/client/src/components/movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { saveMovieIds, getSavedMovieIds } from \"../../utils/localStorage\";\nimport { SAVE_MOVIE } from \"../../utils/mutation\";\nimport \"../../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [saveMovie, {\n    error\n  }] = useMutation(SAVE_MOVIE);\n  const [savedMovieIds, setSavedMovieIds] = useState([]);\n  const [err, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [results, setResults] = useState(\"\");\n  useEffect(() => {\n    return () => saveMovieIds(savedMovieIds);\n  });\n  useEffect(() => {\n    fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=1469c0124feb2071e2822b7f4023b656&language=en-US&page=1\").then(res => res.json()).then(data => {\n      const MovieId = data.results.map(movie => ({\n        movieID: movie.id\n      }));\n      console.log(MovieId);\n      console.log(data);\n      setResults(data);\n      setIsLoaded(true);\n    }, err => {\n      setIsLoaded(true);\n      setError(err);\n    });\n  }, []);\n\n  const handleSaveMovie = async movieid => {\n    const movieToSave = movieid.results.map(movie => ({\n      movie: movie.id\n    }));\n    console.log(movieToSave);\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const {\n        data\n      } = await saveMovie({\n        variables: {\n          input: movieToSave\n        }\n      });\n\n      if (error) {\n        throw new Error('something went wrong!');\n      }\n\n      setSavedMovieIds([...savedMovieIds, movieToSave.movieid]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", err.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Movies_section\",\n      children: Auth.loggedIn() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: results.results.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w200\" + item.poster_path\n          }, item.poster_path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.original_title\n          }, item.original_title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.overview\n          }, item.overview, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            // disabled={savedMovieIds?.some((savedMovieId) => savedMovieId === item.id)}\n            onClick: () => handleSaveMovie(item.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: results.results.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w200\" + item.poster_path\n          }, item.poster_path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.original_title\n          }, item.original_title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.overview\n          }, item.overview, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Movies, \"Lpq+XuGD0vI27x1XfVgVMO/MdKo=\", false, function () {\n  return [useMutation];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/rayandiouf/Desktop/movie-suggester/client/src/components/movies/Movies.js"],"names":["React","Auth","useState","useEffect","useMutation","saveMovieIds","getSavedMovieIds","SAVE_MOVIE","Movies","saveMovie","error","savedMovieIds","setSavedMovieIds","err","setError","isLoaded","setIsLoaded","results","setResults","fetch","then","res","json","data","MovieId","map","movie","movieID","id","console","log","handleSaveMovie","movieid","movieToSave","token","loggedIn","getToken","variables","input","Error","message","item","poster_path","original_title","overview"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,0BAA/C;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAO,iBAAP;;;;AACA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA;AAAF,GAAZ,IAAyBN,WAAW,CAACG,UAAD,CAA1C;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,GAAD,EAAMC,QAAN,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAME,YAAY,CAACM,aAAD,CAAzB;AACD,GAFQ,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CACH,2GADG,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAKKG,IAAD,IAAU;AACR,YAAMC,OAAO,GAAGD,IAAI,CAACN,OAAL,CAAaQ,GAAb,CAAkBC,KAAD,KAAY;AAC3CC,QAAAA,OAAO,EAAED,KAAK,CAACE;AAD4B,OAAZ,CAAjB,CAAhB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAL,MAAAA,UAAU,CAACK,IAAD,CAAV;AACAP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAbL,EAeKH,GAAD,IAAS;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,GAAD,CAAR;AACD,KAlBL;AAoBD,GArBQ,EAqBN,EArBM,CAAT;;AAsBA,QAAMkB,eAAe,GAAG,MAAOC,OAAP,IAAmB;AACzC,UAAMC,WAAW,GAAGD,OAAO,CAACf,OAAR,CAAgBQ,GAAhB,CAAqBC,KAAD,KAAW;AACjDA,MAAAA,KAAK,EAAEA,KAAK,CAACE;AADoC,KAAX,CAApB,CAApB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACA,UAAMC,KAAK,GAAGjC,IAAI,CAACkC,QAAL,KAAkBlC,IAAI,CAACmC,QAAL,EAAlB,GAAoC,IAAlD;;AACA,QAAG,CAACF,KAAJ,EAAU;AACR,aAAO,KAAP;AACD;;AACD,QAAI;AACF,YAAM;AAACX,QAAAA;AAAD,UAAS,MAAMd,SAAS,CAAE;AAC9B4B,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAEL;AAAR;AADmB,OAAF,CAA9B;;AAGA,UAAIvB,KAAJ,EAAW;AACT,cAAM,IAAI6B,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD3B,MAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBsB,WAAW,CAACD,OAA/B,CAAD,CAAhB;AACD,KARD,CAQC,OAAOnB,GAAP,EAAY;AACXgB,MAAAA,OAAO,CAACnB,KAAR,CAAcG,GAAd;AACD;AACF,GApBD;;AAsBA,MAAIH,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaG,GAAG,CAAC2B,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACzB,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGd,IAAI,CAACkC,QAAL,kBACC;AAAA,kBACGlB,OAAO,CAACA,OAAR,CAAgBQ,GAAhB,CAAqBgB,IAAD,iBACnB;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAEE,YAAA,GAAG,EAAE,oCAAoCA,IAAI,CAACC;AAFhD,aACOD,IAAI,CAACC,WADZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA,sBAA+BD,IAAI,CAACE;AAApC,aAASF,IAAI,CAACE,cAAd;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,sBAAwBF,IAAI,CAACG;AAA7B,aAAQH,IAAI,CAACG,QAAb;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AACA;AACA,YAAA,OAAO,EAAE,MAAMb,eAAe,CAACU,IAAI,CAACb,EAAN,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,uBADD,gBAoBC;AAAA,kBACGX,OAAO,CAACA,OAAR,CAAgBQ,GAAhB,CAAqBgB,IAAD,iBACnB;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAEE,YAAA,GAAG,EAAE,oCAAoCA,IAAI,CAACC;AAFhD,aACOD,IAAI,CAACC,WADZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA,sBAA+BD,IAAI,CAACE;AAApC,aAASF,IAAI,CAACE,cAAd;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,sBAAwBF,IAAI,CAACG;AAA7B,aAAQH,IAAI,CAACG,QAAb;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AArBJ;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD;AACF;;GAjGQpC,M;UACwBJ,W;;;KADxBI,M;AAmGT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { saveMovieIds, getSavedMovieIds } from \"../../utils/localStorage\";\nimport { SAVE_MOVIE } from \"../../utils/mutation\";\nimport \"../../index.css\";\nfunction Movies() {\n  const [saveMovie, { error }] = useMutation(SAVE_MOVIE);\n  const [savedMovieIds, setSavedMovieIds] = useState([]);\n  const [err, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [results, setResults] = useState(\"\");\n  useEffect(() => {\n    return () => saveMovieIds(savedMovieIds);\n  });\n\n  useEffect(() => {\n    fetch(\n      \"https://api.themoviedb.org/3/movie/popular?api_key=1469c0124feb2071e2822b7f4023b656&language=en-US&page=1\"\n    )\n      .then((res) => res.json())\n      .then(\n        (data) => {\n          const MovieId = data.results.map((movie) => ({\n            movieID: movie.id,\n          }));\n          console.log(MovieId);\n          console.log(data);\n          setResults(data);\n          setIsLoaded(true);\n        },\n\n        (err) => {\n          setIsLoaded(true);\n          setError(err);\n        }\n      );\n  }, []);\n  const handleSaveMovie = async (movieid) => {\n    const movieToSave = movieid.results.map((movie) =>({\n      movie: movie.id\n    }));\n    console.log(movieToSave)\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if(!token){\n      return false;\n    }\n    try {\n      const {data} = await saveMovie ({\n        variables: {input: movieToSave}\n      })\n      if (error) {\n        throw new Error('something went wrong!');\n      }\n      setSavedMovieIds([...savedMovieIds, movieToSave.movieid])\n    }catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (error) {\n    return <div>Error: {err.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div className=\"Movies_section\">\n        {Auth.loggedIn() ? (\n          <>\n            {results.results.map((item) => (\n              <div className=\"movies\">\n                <img\n                  key={item.poster_path}\n                  src={\"https://image.tmdb.org/t/p/w200\" + item.poster_path}\n                />\n                <h3 key={item.original_title}>{item.original_title}</h3>\n                <p key={item.overview}>{item.overview}</p>\n                <button\n                // disabled={savedMovieIds?.some((savedMovieId) => savedMovieId === item.id)}\n                onClick={() => handleSaveMovie(item.id)}\n                >\n                  Save\n                </button>\n              </div>\n            ))}\n          </>\n        ) : (\n          <>\n            {results.results.map((item) => (\n              <div className=\"movies\">\n                <img\n                  key={item.poster_path}\n                  src={\"https://image.tmdb.org/t/p/w200\" + item.poster_path}\n                />\n                <h3 key={item.original_title}>{item.original_title}</h3>\n                <p key={item.overview}>{item.overview}</p>\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}