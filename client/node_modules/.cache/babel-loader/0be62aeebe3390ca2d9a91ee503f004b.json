{"ast":null,"code":"var _jsxFileName = \"/Users/rayandiouf/Desktop/movie-suggester/client/src/components/searchBarAndInfo/SearchBarInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchInfo() {\n  _s();\n\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchMoviee, setSearchMovie] = useState(\"\"); //   const fetchdata = async (yourmovie) => {\n  //     const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${yourmovie}`;\n  //     const response = await fetch(url);\n  //     console.log(response);\n  //     const responseParsed = await response.json();\n  //     console.log(responseParsed);\n  //   };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchMoviee) {\n      return false;\n    }\n\n    try {\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${searchMoviee}`;\n      const response = await fetch(url);\n      console.log(response);\n\n      if (!resJSON.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const resJSON = await response.json();\n      const MovieData = resJSON.map(movie => ({\n        movieName: movie.title,\n        movieOverview: movie.overview,\n        moviePoster: movie.poster_path\n      }));\n      setSearchedMovies(MovieData);\n      setSearchMovie(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }; //   fetchdata(\"Batman\");\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          value: searchMoviee // onSubmit={(e) => setSearchMovie(e.target.value)}\n          ,\n          placeholder: \"Search for a Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          variant: \"success\",\n          onClick: setSearchMovie(searchMoviee),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Movie streamz is a movie app blablablablablablaablabalbalbalablblablbalabblablalblablablablablablablalna\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchMovieee\",\n      children: searchedMovies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w200\" + movie.poster_path\n          }, movie.poster_path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.original_title\n          }, movie.original_title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.overview\n          }, movie.overview, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchInfo, \"lyzMcj+WwV3UPqq6pNoisuJZ5Po=\");\n\n_c = SearchInfo;\nexport default SearchInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInfo\");","map":{"version":3,"sources":["/Users/rayandiouf/Desktop/movie-suggester/client/src/components/searchBarAndInfo/SearchBarInfo.js"],"names":["React","useEffect","useState","SearchInfo","searchedMovies","setSearchedMovies","searchMoviee","setSearchMovie","handleSubmit","event","preventDefault","url","response","fetch","console","log","resJSON","ok","Error","json","MovieData","map","movie","movieName","title","movieOverview","overview","moviePoster","poster_path","err","original_title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction SearchInfo() {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchMoviee, setSearchMovie] = useState(\"\");\n//   const fetchdata = async (yourmovie) => {\n//     const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${yourmovie}`;\n//     const response = await fetch(url);\n//     console.log(response);\n//     const responseParsed = await response.json();\n//     console.log(responseParsed);\n//   };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!searchMoviee) {\n      return false;\n    }\n    try {\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=1469c0124feb2071e2822b7f4023b656&query=${searchMoviee}`;\n      const response = await fetch(url);\n      console.log(response);\n      if (!resJSON.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n      const resJSON = await response.json();\n      const MovieData = resJSON.map((movie) => ({\n        movieName: movie.title,\n        movieOverview: movie.overview,\n        moviePoster: movie.poster_path,\n      }));\n      setSearchedMovies(MovieData);\n      setSearchMovie(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n//   fetchdata(\"Batman\");\n  return (\n    <div onSubmit={handleSubmit}>\n      <div className=\"searchInfo\">\n        <div className=\"searchBar\">\n          <input\n            type=\"search\"\n            value={searchMoviee}\n            // onSubmit={(e) => setSearchMovie(e.target.value)}\n            placeholder=\"Search for a Movie\"\n          />\n          <button type=\"submit\" variant=\"success\" onClick={setSearchMovie(searchMoviee)}>\n            Search\n          </button>\n        </div>\n      </div>\n      <div className=\"info\">\n        <p>\n          Movie streamz is a movie app\n          blablablablablablaablabalbalbalablblablbalabblablalblablablablablablablalna\n        </p>\n      </div>\n      <div className=\"searchMovieee\">\n        {searchedMovies.map((movie) => {\n            return(\n                <>\n                <img key={movie.poster_path} src={\"https://image.tmdb.org/t/p/w200\" + movie.poster_path} />\n                <h3 key={movie.original_title}>{movie.original_title}</h3>\n                <p key={movie.overview}>{movie.overview}</p>\n                </>\n            )\n        })}\n      </div>\n    </div>\n  );\n}\nexport default SearchInfo;\n"]},"metadata":{},"sourceType":"module"}